# jimslog-deploy.yml

name: deploy

on:
  push:
    branches: [ main ]

permissions:
  contents: read

env:
  S3_DEPLOY_BUCKET: build-jar-jimslog-deploy
  PROJECT_NAME: jimslog-backend

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
          cache: gradle
      
      - name: Set Yaml
        uses: microsoft/variable-substitution@v1
        with:
          files: ./src/main/resources/application.yml 
        env:
          spring.data.redis.host: ${{ secrets.REDIS_HOST }}
          cloud.aws.s3.bucket: ${{ secrets.S3_BUCKET }}
          cloud.aws.region.static: ${{ secrets.AWS_REGION_STATIC }}
          cloud.aws.credentials.access-key: ${{ secrets.AWS_CREDENTIALS_ACCESS_KEY }}
          cloud.aws.credentials.secret-key: ${{ secrets.AWS_CREDENTIALS_SECRET_KEY }}
          jwt.secret.key: ${{ secrets.JWT_SECRET_KEY }}
          jimslog.admin: ${{ secrets.JIMSLOG_ADMIN }}
          jimslog.s3.url: ${{ secrets.JIMSLOG_S3_URL }}
          jimslog.s3.local: ${{ secrets.JIMSLOG_S3_LOCAL }}

      - name: Set Prod Yaml
        uses: microsoft/variable-substitution@v1
        with:
          files: ./src/main/resources/application-prod.yml 
        env:          
          spring.datasource.url: ${{ secrets.DB_URL }} 
          spring.datasource.username: ${{ secrets.DB_USERNAME }} 
          spring.datasource.password: ${{ secrets.DB_PASSWORD }}
          spring.data.redis.password: ${{ secrets.REDIS_PASSWORD }}

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      - name: Build with Gradle
        run: ./gradlew build
        shell: bash

      - name: Make zip file
        run: zip -r ./$GITHUB_SHA.zip .
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentails@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_S3_DEPLOY_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_S3_DEPLOY_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION_STATIC }}

      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$S3_DEPLOY_BUCKET/$PROJECT_NAME/$GITHUB_SHA.zip
